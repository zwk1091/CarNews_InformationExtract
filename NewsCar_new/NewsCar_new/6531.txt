标题：嵌入式汽车开发潜力巨大
内容：其实做电子的大部原理相似，只不过侧重点不同而已，汽车电子与消费类电子最大的区别就是安全和稳定性，而智能手机强调用户体验和功能等方面。用户认为只要具备打电话、收发短信、听音乐、看电影和聊天上网等功能，可能就会觉得挺好的，偶尔死一次机重启一次也不是什么大问题，但汽车电子就不一样了，首先得保障安全与稳定性能，绝对不要出现死机现象，一般做前装的话都得要求所有零件都得满足车规级别，车规比工规级别要求更高，使用条件更加苛刻。其次使用不要太复杂，越简单越好，最好用户一看上去就能上手使用最好，有个很好的人机交互界面才会吸引客户，接下来才是其它方面，比如功能等。近几十年汽车在中国还有很大的市场潜力，因此，汽车电子行业未来前景是比较乐观的。很多人都讲嵌入式开发很难，能不能就你学习和工作经验与大家分享下嵌入式开发如何开始和深入？说到嵌入式开发如何开始和深入，其实我也没有特别的方法，在这里仅谈下我的个人见解吧。做嵌入式开发必须具备良好的C语言功底，汇编虽然不是必须，但懂点更好。其次可以到网上找一个比较流行的MCU开发板，比如STM32做为学习开发板，参照示例代码，自己动手编译烧录跑程序，比如跑马灯的程序，深刻了解整个开发过程。接下来可以学习小型的实时操作系统，比如UC/OS和RT-Thread等，如果C语言比较好的话可以尝试了解这个实时操作系统的原理部分，尝试阅读其源码，掌握其使用技巧。而接下来最好是能参与具体的开发项目，负责几个模块，写写驱动，或做应用。需要强调的是，每个过程一定要自己尝试动手，不要停留在书本或官方提供的开发手册上，一定要通过自己的实践去验证自己想法，在这个过程中通过不断思考与验证，有问题找经验丰富的同事或在网上找答案，另外最好能将心得记录下来（比如说写CSDN博客），并不断总结。这样持之以恒，不知不觉你就会发现已经进入资深嵌入式开发工程师的行列了。个人认为嵌入式开发工程师应具备：1.良好的C语言功底。2.至少熟悉一款MCU，其它的技能可以在具体项目中不断学习来补充。目前的车载娱乐终端和移动手机或平板终端有什么区别？运行环境不一样，大家都知道车上的环境比较恶劣，比如车辆在行驶过程中震动的比较厉害，越靠近发动机信号受到的干扰就越严重，且汽车可能会在炎热的沙漠中行驶，也可能在冰天雪地中奔驰。另外在行驶的过程中人机交互不应过分分散车主注意力，有电话进来，导航与电话的界面该如何处理？用户在一边听音乐一边导航的过程中，导航的声音与普通音乐的声音切换该如何处理？万一出现事故，车载终端又应该首要保证什么？这此东西都是车载终端应该考虑的事情，而手机或平板没这方面的考虑，它主要是考虑的是功能与UI方面，这应该就是最大的区别吧。严格来说，车载娱乐系统与车辆内的控制系统无直接关系，两者都属于车辆内部系统，且还有可能处于同一总线网络内(取决于整车厂如何设计)。不过两者之间是可以通信，我们是可以通过车载娱乐系统来获取一些用户比较关心的参数，比如发动机转速、冷却液温度、喷油脉宽和车门状态等等，具体还得取决于这款车的网络是如何设计。另外我们也可以通过它来做一些控制，比如车门锁开关和空调开关等，甚至还可以做一些诊断，判断汽车当前是否正常。所有这些都取决于整车厂如何设计这款车内部的总线网络，只有这样车载娱乐终端才能通过车厂提供的通信协议无缝接入到车内网与其它ECU或零部件进行通信。目前主要分为两类，强终端和弱终端，强终端是几乎将所有终端功能都集中一起的产品，包括导航、电话、短信、彩信、上网、音乐、在线音视频、网络收音机、安防报警、语音识别控制、坐席服务、一键导航、eCall和路书等功能，而弱终端可能只强调某部分功能，有专门强调安防方面的，也有专门强调网络收音机方面的，或是在线音乐方面等，而实际开发主要取决于客户需求，有些客户只需要一个简单功能又要低成本方案，那只能选择弱终端解决方案。不可否认RT-Thread确实是不错的开源操作系统，比较容易入手还完全免费，在低成本方案时可以考虑使用它（UC/OS目前商用收费），但UC/OS毕竟出来很多年，通过了各种各样的测试，各种资源网络上也比较多，在系统稳定性方面也要比RT-Thread强，所以RT-Thread还需要继续努力。
